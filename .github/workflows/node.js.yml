# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: make env variable
        id: makeVar
        run: |
          FLAG=true
          echo "FLAG=$FLAG" >> $GITHUB_OUTPUT
      - name: save command log
        id: coverage-summary
        run: |
          SUMMARY=$(npm run print-test)
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: upload sample artifact
        uses: actions/upload-artifact@v4
        with:
          name: first
          path: sample-greeting.txt
      - name: upload second artifact
        uses: actions/upload-artifact@v4
        with:
          name: second
          path: sample-another-text.txt
      - name: Get artifact download URL
        id: artifact-url
        run: |
          ARTIFACT_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "url=$ARTIFACT_URL" >> $GITHUB_OUTPUT
      - name: Post coverage comment
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const summary = `${{ steps.coverage-summary.outputs.summary }}`;
            const artifactUrl = '${{ steps.artifact-url.outputs.url }}';

            console.log(artifactUrl)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: `Coverage summary:\n\`\`\`\n${summary}\n\`\`\`\n\nDownload full results: ${artifactUrl}`
            })
